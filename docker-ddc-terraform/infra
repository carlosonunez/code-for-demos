#!/bin/bash

usage() {
  cat <<EOF
./infra (plan|apply|destroy) [terraform_options]
Runs a Terraform plan or deployment while fetching the latest terraform.tfvars.

NOTE: S3_INFRASTRUCTURE_BUCKET must be defined for your environment. Set it to the location of the terraform.tfvars file in S3.

NOTE: TARGET_ENVIRONMENT also needs to be set to the environment you wish to deploy.

NOTE: awscli must be installed. Install it with "pip install awscli".

EOF
}

our_current_ip=$(curl -Ls http://canihazip.com/s | cut -f1 -d, | tr -d ' ')
our_current_region=$AWS_REGION

if [ "$1" == "" ]
then
  usage
  exit 1
fi

if [ "$1" != "plan" ] && [ "$1" != "apply" ] && [ "$1" != "destroy" ]
then
  usage
  echo "ERROR: You can only run 'plan', 'destroy' or 'apply' with this script."
  echo "Use 'terraform' for any other Terraform subcommands"
  exit 1
elif [ "$1" == "help" ]
then
  usage
  exit 0
fi

if [ "$S3_INFRASTRUCTURE_BUCKET" == "" ]
then
  usage
  echo "ERROR: You must define S3_INFRASTRUCTURE_BUCKET before running this script."
  exit 1
fi

if [ "$TARGET_ENVIRONMENT" == "" ]
then
  usage
  echo "ERROR: TARGET_ENVIRONMENT needs to be defined in your environment \
before running this script."
  exit 1
fi

if [ "$(which aws)" == "" ]
then
  usage
  echo "ERROR: awscli must be installed for this script to work."
  exit 1
fi

if [ "$(which terraform)" == "" ]
then
  usage
  echo "ERROR: Terraform must be installed to run this script."
  exit 1
fi

terraform_tfvars_remote_path="s3://$S3_INFRASTRUCTURE_BUCKET/tfvars/$TARGET_ENVIRONMENT/terraform.tfvars"
terraform_tfvars_fetch_errors="$(\
  aws s3 cp $terraform_tfvars_remote_path 'terraform.tfvars.new' 1>/dev/null
)"
if [ ! -f 'terraform.tfvars.new' ]
then
  echo "ERROR: Could not fetch $terraform_tfvars_remote_path"
  echo "Errors from aws follow:"
  echo $terraform_tfvars_fetch_errors
  exit 1
fi

if [ -f "terraform.tfvars" ]
then
  unsaved_local_tfvars_changes="$(diff 'terraform.tfvars' 'terraform.tfvars.new' | \
    grep '<')"
  if [ "$unsaved_local_tfvars_changes" != "" ]
  then
    command_to_run="aws s3 cp terraform.tfvars $terraform_tfvars_remote_path"
    rm 'terraform.tfvars.new'
    echo "ERROR: You have unsaved changes to your local Terraform tfvars. \
Please upload them before running this again."
    echo ""
    echo "To do that, run the following command:"
    echo ""
    echo $command_to_run
    exit 1
  else
    rm 'terraform.tfvars'
    mv 'terraform.tfvars.new' 'terraform.tfvars'
  fi 
fi

terraform init && \
terraform get && \
terraform $1 -var "aws_region=$our_current_region" \
  -var "terraform_deployer_ip=$our_current_ip" "${@:2}"
